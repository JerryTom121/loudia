#! /usr/bin/env python
# encoding: utf-8
# Ricard Marxer 2008

import Options

LIBNAME = 'loudia'
LIBVERSION = '0.1-dev'

def set_options(opt):
	opt.tool_options('compiler_cxx')

        opt.sub_options('swig')
        opt.sub_options('tests')
	

def configure(conf):
	conf.check_tool('compiler_cxx')
        conf.check_cfg(atleast_pkgconfig_version='0.0.0')
        conf.check_cfg(package='fftw3', uselib_store='FFTW3', errmsg='FFTW not found. No FFT support.')

        """
	conf.check_cc(fragment='''extern "C" {
        #ifndef __STDC_CONSTANT_MACROS
        #define __STDC_CONSTANT_MACROS
        #endif
        #include <libavcodec/avcodec.h>
        #include <libavformat/avformat.h>
        }
        
        int main() { printf("1"); return 1; } ''',
                      define_name='HAVE_FFMPEG_H',
                      define_ret='1',
                      execute='1',
                      msg='Checking for ffmpeg',
                      okmsg= 'ok',
                      errmsg='FFMPEG not found. No audio loading support.')
        """
        
        conf.check_cfg(package='samplerate', uselib_store='SAMPLERATE', mandatory=True)

        if conf.env['option_debug']:
                conf.env.append_value('CXXFLAGS', '-Wall  -O3 -fPIC -msse2 -DLOUDIA_DEBUG')
        else:
                conf.env.append_value('CXXFLAGS', '-O3 -fPIC -msse2 -DNDEBUG')
                
        conf.env.append_value('LINKFLAGS', '-lfftw3f -lsamplerate -lavcodec -lavformat')
        
        if not conf.env['option_no_python_bindings']:
                conf.sub_config('swig')

        if conf.env['option_cpptests']:
                conf.sub_config('tests')

def build(bld):
        obj = bld.new_task_gen(
                features = 'cxx cshlib',
                uselib = 'FFTW3 FFMPEG SAMPLERATE',
                target = LIBNAME,
                includes = '. ../externals',
                export_inc_dirs = '.',
                name         = LIBNAME,
                vnum         = LIBVERSION
        )
        
	obj.find_sources_in_dirs('.', exts=['.cpp'])

        if not bld.env['option_no_python_bindings']:
                bld.add_subdirs('swig')
        
        if bld.env['option_cpptests']:
                bld.add_subdirs('tests')
                
        bld.install_files('${PREFIX}/include/loudia', '*.h')
